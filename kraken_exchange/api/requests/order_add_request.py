from typing import Union
from .order_batch_item_close_request import OrderBatchItemCloseRequest
from ..abstract.request import Request


class OrderAddRequest(Request):
    reference_id: Union[str, Request.Fields.CharField, None] = Request.Fields.CharField(
        required=False, location="body", alias="userref"
    )
    """
    userref is an optional user-specified integer id that can be associated with any number of orders.

    Many clients choose a userref corresponding to a unique integer id generated by their systems (e.g. a timestamp).

    However, because we don't enforce uniqueness on our side, it can also be used to easily group orders by pair, side, strategy, etc.

    This allows clients to more readily cancel or query information about orders in a particular group,
    with fewer API calls by using userref instead of our txid, where supported.
    """

    ordertype: Union[str, Request.Fields.CharField, None] = Request.Fields.CharField(
        required=False, location="body", alias="ordertype"
    )
    """
    Enum: "market" "limit" "stop-loss" "take-profit" "stop-loss-limit" "take-profit-limit" "trailing-stop" "trailing-stop-limit" "settle-position"
    Order type
    """

    type: Union[str, Request.Fields.CharField, None] = Request.Fields.CharField(
        required=False, location="body"
    )
    """
    Enum: "buy" "sell"
    Order direction (buy/sell)
    """

    volume: Union[str, Request.Fields.CharField, None] = Request.Fields.CharField(
        required=False, location="body"
    )
    """
    Order quantity in terms of the base asset

    Note: Volume can be specified as 0 for closing margin orders to automatically fill the requisite quantity.
    """

    display_volume: Union[
        str, Request.Fields.CharField, None
    ] = Request.Fields.CharField(required=False, location="body")
    """
    Used to create an iceberg order, this is the visible order quantity in terms of the base asset.
    The rest of the order will be hidden, although the full volume can be filled at any time by any order of that
    size or larger that matches in the order book. displayvol can only be used with the limit order type, must
    be greater than 0, and less than volume."""

    pair: Union[str, Request.Fields.CharField, None] = Request.Fields.CharField(
        required=False, location="body"
    )
    """
    Asset pair id or altname
    """

    price: Union[str, Request.Fields.CharField, None] = Request.Fields.CharField(
        required=False, location="body"
    )
    """
    Limit price for limit orders
    Trigger price for stop-loss, stop-loss-limit, take-profit, take-profit-limit, trailing-stop and trailing-stop-limit orders
    Notes:

    Relative Prices: Either price or price2 can be preceded by +, -, or # to specify the order price as an offset relative to
    the last traded price. + adds the amount to, and - subtracts the amount from the last traded price. # will either add or
    subtract the amount to the last traded price, depending on the direction and order type used. Prices can also be suffixed
    with a % to signify the relative amount as a percentage, rather than an absolute price difference.
    Trailing Stops: Must use a relative price for this field, namely the + prefix, from which the direction will be automatic
    based on if the original order is a buy or sell (no need to use - or #). The % suffix also works for these order types to
    use a relative percentage price.
    """

    price2 = Request.Fields.CharField(required=False, location="body", alias="price2")
    """
    Secondary Price:

    Limit price for stop-loss-limit, take-profit-limit and trailing-stop-limit orders Note:
    Trailing Stops: Must use a relative price for this field, namely one of the + or - prefixes.

    This will provide the offset from the trigger price to the limit price, i.e. +0 would set the limit price equal
    to the trigger price. The % suffix also works for this field to use a relative percentage limit price.
    """

    trigger: Union[str, Request.Fields.CharField, None] = Request.Fields.CharField(
        required=False, location="body"
    )
    """
    Default: "last"
    Enum: "index" "last"
    Price signal used to trigger stop-loss, stop-loss-limit, take-profit, take-profit-limit, trailing-stop and trailing-stop-limit orders Notes:

    This trigger type will also be used for any associated conditional close orders.
    To keep triggers serviceable, the last price will be used as fallback reference price during connectivity issues with external index feeds.
    """

    leverage: Union[str, Request.Fields.CharField, None] = Request.Fields.CharField(
        required=False, location="body"
    )
    """Amount of leverage desired (default: none)"""

    reduce_only = Request.Fields.BoolField(required=False, location="body")
    """
    Default: false
    If true, order will only reduce a currently open position, not increase it or open a new position.
    """

    stptype: Union[str, Request.Fields.CharField, None] = Request.Fields.CharField(
        required=False, location="body"
    )
    """
    Default: "cancel-newest"

    Enum: "cancel-newest" "cancel-oldest" "cancel-both"

    Self trade prevention behavior definition:

    cancel-newest - if self trade is triggered, arriving order will be canceled

    cancel-oldest - if self trade is triggered, resting order will be canceled

    cancel-both - if self trade is triggered, both arriving and resting orders will be canceled
    """

    order_flags: Union[str, Request.Fields.CharField, None] = Request.Fields.CharField(
        required=False, location="body", alias="oflags"
    )
    """
    Comma delimited list of order flags

    post: post-only order (available when ordertype = limit)
    fcib: prefer fee in base currency (default if selling)
    fciq: prefer fee in quote currency (default if buying, mutually exclusive with fcib)
    nompp: disable market price protection for market orders
    viqc: order volume expressed in quote currency. This is supported only for market orders.
    """

    timeinforce: Union[str, Request.Fields.CharField, None] = Request.Fields.CharField(
        required=False, location="body", alias="timeinforce"
    )
    """
    Default: "GTC"

    Enum: "GTC" "IOC" "GTD"

    Time-in-force of the order to specify how long it should remain in the order book before being cancelled.

    GTC (Good-'til-cancelled) is default if the parameter is omitted. IOC (immediate-or-cancel) will immediately execute
    the amount possible and cancel any remaining balance rather than resting in the book. GTD (good-'til-date),
    if specified, must coincide with a desired expiretm.
    """

    starttm: Union[str, Request.Fields.CharField, None] = Request.Fields.CharField(
        required=False, location="body"
    )
    """Scheduled start time, can be specified as an absolute timestamp or as a number of seconds in the future:

    0 now (default)
    <n> = unix timestamp of start time
    +<n> = schedule start time <n> seconds from now
    Note that URL encoding of the + character changes it to a space, so please use %2b followed by the number of seconds instead of +
    """

    expiretm: Union[str, Request.Fields.CharField, None] = Request.Fields.CharField(
        required=False, location="body"
    )
    """
    Expiration time, also can be specified as an absolute timestamp or as a number of seconds in the future:

    0 no expiration (default)
    <n> = unix timestamp of expiration time
    +<n> = expire <n> seconds from now, minimum 5 seconds
    Note that URL encoding of the + character changes it to a space, so please use %2b followed by the number of seconds instead of +
    """

    deadline: Union[str, Request.Fields.CharField, None] = Request.Fields.CharField(
        required=False, location="body"
    )
    """
    string
    Enum: "limit" "stop-loss" "take-profit" "stop-loss-limit" "take-profit-limit" "trailing-stop" "trailing-stop-limit"
    Conditional close order type

    Note: Conditional close orders are triggered by execution of the primary order in the same quantity and opposite direction, but once triggered are independent orders that may reduce or increase net position"""
    validate: Union[str, Request.Fields.CharField, None] = Request.Fields.CharField(
        required=False, location="body"
    )

    """
    Validate inputs only. Do not submit order.
    """

    close = Request.Fields.ChildModelField(OrderBatchItemCloseRequest, location="body")
    """
    Conditional close order price
    """

    @classmethod
    def is_child(cls) -> bool:
        return False

    def get_method(self) -> str:
        return "POST"

    def get_path(self) -> str:
        return "/0/private/AddOrder"

    def get_factory_response(self, response: dict | None = None) -> dict:
        return {
            "error": [],
            "result": {
                "descr": {"order": "buy 1.25000000 XBTUSD @ limit 27500.0"},
                "txid": ["OU22CG-KLAF2-FWUDD7"],
            },
        }
